// <auto-generated />
using System;
using GrainElevator.Storage;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GrainElevator.Storage.Migrations
{
    [DbContext(typeof(GrainElevatorApiContext))]
    [Migration("20240830201014_fixModels")]
    partial class fixModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.AppDefect", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.ToTable("AppDefects");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.CompletionReport", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<bool?>("IsFinalized")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int?>("PriceListId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double?>("QuantitiesDrying")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReportDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ReportNumber")
                        .HasMaxLength(9)
                        .HasColumnType("int");

                    b.Property<double?>("ReportPhysicalWeight")
                        .HasColumnType("float");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PriceListId");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.HasIndex("SupplierId");

                    b.ToTable("CompletionReports");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.DepotItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.HasIndex("SupplierId");

                    b.ToTable("DepotItems");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.DepotProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("DepotItemId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepotItemId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("DepotProductCategories");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSeenOnline")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.InputInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int?>("LaboratoryCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int>("PhysicalWeight")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.HasIndex("SupplierId");

                    b.ToTable("InputInvoices");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.LaboratoryCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<double?>("GrainImpurity")
                        .HasColumnType("float");

                    b.Property<int>("InputInvoiceId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsProduction")
                        .HasColumnType("bit");

                    b.Property<string>("LabCardNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<double>("Moisture")
                        .HasColumnType("float");

                    b.Property<int?>("ProductionBatchId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SpecialNotes")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<double>("WeedImpurity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("InputInvoiceId")
                        .IsUnique();

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("LaboratoryCards");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.OutputInvoice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("DepotItemId")
                        .HasColumnType("int");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ProductCategory")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("ProductWeight")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleNumber")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("DepotItemId");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.HasIndex("SupplierId");

                    b.ToTable("OutputInvoices");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.PriceList", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<string>("ProductTitle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("PriceLists");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.PriceListItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<double>("OperationPrice")
                        .HasColumnType("float");

                    b.Property<string>("OperationTitle")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("PriceListId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("PriceListId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("PriceListItems");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.ProductionBatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccountWeight")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int>("LaboratoryCardId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<double>("MoistureBase")
                        .HasColumnType("float");

                    b.Property<int?>("RegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Shrinkage")
                        .HasColumnType("int");

                    b.Property<int?>("Waste")
                        .HasColumnType("int");

                    b.Property<double>("WeedImpurityBase")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("LaboratoryCardId")
                        .IsUnique();

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RegisterId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("ProductionBatches");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Register", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccWeightReg")
                        .HasColumnType("int");

                    b.Property<DateTime>("ArrivalDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CompletionReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<int?>("PhysicalWeightReg")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double?>("QuantitiesDryingReg")
                        .HasColumnType("float");

                    b.Property<string>("RegisterNumber")
                        .IsRequired()
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ShrinkageReg")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int?>("WasteReg")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompletionReportId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("ProductId");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.HasIndex("SupplierId");

                    b.ToTable("Registers");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.TechnologicalOperation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<int?>("CompletionReportId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ModifiedById")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime?>("RemovedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RemovedById")
                        .HasColumnType("int");

                    b.Property<int?>("RestoreById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RestoredAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<double>("TotalCost")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompletionReportId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("ModifiedById");

                    b.HasIndex("RemovedById");

                    b.HasIndex("RestoreById");

                    b.ToTable("TechnologicalOperations");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.AppDefect", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.CompletionReport", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("CompletionReports")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.PriceList", "PriceList")
                        .WithMany("CompletionReports")
                        .HasForeignKey("PriceListId");

                    b.HasOne("GrainElevatorAPI.Core.Models.Product", "Product")
                        .WithMany("CompletionReports")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Supplier", "Supplier")
                        .WithMany("CompletionReports")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PriceList");

                    b.Navigation("Product");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.DepotItem", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("DepotItems")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Product", "Product")
                        .WithMany("DepotItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Supplier", "Supplier")
                        .WithMany("DepotItems")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Product");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.DepotProductCategory", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("DepotProductCategories")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.DepotItem", "DepotItem")
                        .WithMany("ProductCategories")
                        .HasForeignKey("DepotItemId");

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("DepotItem");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Employee", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.InputInvoice", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("InputInvoices")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Product", "Product")
                        .WithMany("InputInvoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Supplier", "Supplier")
                        .WithMany("InputInvoices")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Product");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.LaboratoryCard", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("LaboratoryCards")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.InputInvoice", "InputInvoice")
                        .WithOne("LaboratoryCard")
                        .HasForeignKey("GrainElevatorAPI.Core.Models.LaboratoryCard", "InputInvoiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("InputInvoice");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.OutputInvoice", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("OutputInvoices")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.DepotItem", "DepotItem")
                        .WithMany("OutputInvoices")
                        .HasForeignKey("DepotItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Product", "Product")
                        .WithMany("OutputInvoices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Supplier", "Supplier")
                        .WithMany("OutputInvoices")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("DepotItem");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Product");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.PriceList", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("PriceLists")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.PriceListItem", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("PriceListItems")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.PriceList", "PriceList")
                        .WithMany("PriceByOperations")
                        .HasForeignKey("PriceListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("PriceList");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Product", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("Products")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.ProductionBatch", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("ProductionBatches")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.LaboratoryCard", "LaboratoryCard")
                        .WithOne("ProductionBatch")
                        .HasForeignKey("GrainElevatorAPI.Core.Models.ProductionBatch", "LaboratoryCardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Register", "Register")
                        .WithMany("ProductionBatches")
                        .HasForeignKey("RegisterId");

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("LaboratoryCard");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Register");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Register", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.CompletionReport", "CompletionReport")
                        .WithMany("Registers")
                        .HasForeignKey("CompletionReportId");

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("Registers")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Product", "Product")
                        .WithMany("Registers")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Supplier", "Supplier")
                        .WithMany("Registers")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompletionReport");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("Product");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Role", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("Roles")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Supplier", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("Suppliers")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.TechnologicalOperation", b =>
                {
                    b.HasOne("GrainElevatorAPI.Core.Models.CompletionReport", "CompletionReport")
                        .WithMany("TechnologicalOperations")
                        .HasForeignKey("CompletionReportId");

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "CreatedBy")
                        .WithMany("TechnologicalOperations")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "ModifiedBy")
                        .WithMany()
                        .HasForeignKey("ModifiedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RemovedBy")
                        .WithMany()
                        .HasForeignKey("RemovedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GrainElevatorAPI.Core.Models.Employee", "RestoreBy")
                        .WithMany()
                        .HasForeignKey("RestoreById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CompletionReport");

                    b.Navigation("CreatedBy");

                    b.Navigation("ModifiedBy");

                    b.Navigation("RemovedBy");

                    b.Navigation("RestoreBy");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.CompletionReport", b =>
                {
                    b.Navigation("Registers");

                    b.Navigation("TechnologicalOperations");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.DepotItem", b =>
                {
                    b.Navigation("OutputInvoices");

                    b.Navigation("ProductCategories");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Employee", b =>
                {
                    b.Navigation("CompletionReports");

                    b.Navigation("DepotItems");

                    b.Navigation("DepotProductCategories");

                    b.Navigation("InputInvoices");

                    b.Navigation("LaboratoryCards");

                    b.Navigation("OutputInvoices");

                    b.Navigation("PriceListItems");

                    b.Navigation("PriceLists");

                    b.Navigation("ProductionBatches");

                    b.Navigation("Products");

                    b.Navigation("Registers");

                    b.Navigation("Roles");

                    b.Navigation("Suppliers");

                    b.Navigation("TechnologicalOperations");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.InputInvoice", b =>
                {
                    b.Navigation("LaboratoryCard");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.LaboratoryCard", b =>
                {
                    b.Navigation("ProductionBatch");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.PriceList", b =>
                {
                    b.Navigation("CompletionReports");

                    b.Navigation("PriceByOperations");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Product", b =>
                {
                    b.Navigation("CompletionReports");

                    b.Navigation("DepotItems");

                    b.Navigation("InputInvoices");

                    b.Navigation("OutputInvoices");

                    b.Navigation("Registers");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Register", b =>
                {
                    b.Navigation("ProductionBatches");
                });

            modelBuilder.Entity("GrainElevatorAPI.Core.Models.Supplier", b =>
                {
                    b.Navigation("CompletionReports");

                    b.Navigation("DepotItems");

                    b.Navigation("InputInvoices");

                    b.Navigation("OutputInvoices");

                    b.Navigation("Registers");
                });
#pragma warning restore 612, 618
        }
    }
}
